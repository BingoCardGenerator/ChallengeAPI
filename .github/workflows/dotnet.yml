name: .NET Core CI

on:
  push:
    paths-ignore:
      - '**.gitignore'
      - '**/README.md'
      - '**.dockerignore'
      - '**/stylecop.props'
      - '**/stylecop.ruleset'
      - '**/stylecop.json'
  pull_request:
    branches: [ "main", "Develop" ]
    paths-ignore:
      - '**.gitignore'
      - '**/README.md'
      - '**.dockerignore'
      - '**/stylecop.props'
      - '**/stylecop.ruleset'
      - '**/stylecop.json'
jobs:
  build_and_test:
    runs-on: ${{ matrix.os }} 

    defaults:
      run:
        shell: bash
        working-directory: ./ChallengeApi
    strategy: 
      matrix: 
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.401

    - name: Install dependencies
      run: dotnet restore

    - name: SonarCloud Begin
      run: | 
        dotnet tool install --global dotnet-sonarscanner
        dotnet sonarscanner begin /o:bingocardgenerator /k:BingoCardGenerator_ChallengeAPI /d:sonar.login=${{ secrets.SONAR_TOKEN }} /s:$GITHUB_WORKSPACE/ChallengeApi/SonarQube.Analysis.xml
        
    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --logger:trx --results-directory ./TestResults --settings coverlet.runsettings --verbosity normal --no-restore
      
    - name: Login To Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
    -
        name: Build and push to docker
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/clockbox:latest
    
    - name: SonarCloud End
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
