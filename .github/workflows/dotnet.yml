name: .NET Core CI

on:
  push:
    branches: [ main, Develop ]
    paths-ignore:
      - '**.gitignore'
      - '**/README.md'
      - '**.dockerignore'
      - '**/stylecop.props'
      - '**/stylecop.ruleset'
      - '**/stylecop.json'
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - '**.gitignore'
      - '**/README.md'
      - '**.dockerignore'
      - '**/stylecop.props'
      - '**/stylecop.ruleset'
      - '**/stylecop.json'
jobs:
  build:
    runs-on: ${{ matrix.os }} 
    defaults:
      run:
        shell: bash
        working-directory: ./ChallengeApi
    strategy: 
      matrix: 
        os: [windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.401

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --no-restore --verbosity normal
      
    - name: Set up JDK 11
    -  uses: actions/setup-java@v1
       with:
          java-version: 1.11
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Build and analyze
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"BingoCardGenerator_ChallengeAPI" /o:"bingocardgenerator" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          <insert_your_clean_build_command>
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
